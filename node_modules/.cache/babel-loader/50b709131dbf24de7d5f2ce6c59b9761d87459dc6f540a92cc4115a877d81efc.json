{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alwin\\\\Desktop\\\\bookself-rearranger\\\\client\\\\src\\\\components\\\\OCRTest.js\",\n  _s = $RefreshSig$();\n// client/src/components/OCRTest.js\n\nimport React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCRTest = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file));\n    }\n  };\n  const handleImageUpload = () => {\n    if (image) {\n      setLoading(true); // Set loading state\n      Tesseract.recognize(image, 'eng', {\n        logger: info => console.log(info) // Log progress for debugging\n      }).then(({\n        data: {\n          text\n        }\n      }) => {\n        setText(text);\n        setLoading(false); // Clear loading state\n      }).catch(err => {\n        console.error(err);\n        setLoading(false); // Clear loading state on error\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OCR Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImageUpload,\n      children: \"Process Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), \" \", image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Selected\",\n        style: {\n          maxWidth: '100%',\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(OCRTest, \"JWLvf8CGBHy8Tt4pDowX4S8BNuw=\");\n_c = OCRTest;\nexport default OCRTest;\nvar _c;\n$RefreshReg$(_c, \"OCRTest\");","map":{"version":3,"names":["React","useState","Tesseract","jsxDEV","_jsxDEV","OCRTest","_s","text","setText","image","setImage","loading","setLoading","handleImageChange","e","file","target","files","URL","createObjectURL","handleImageUpload","recognize","logger","info","console","log","then","data","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","style","maxWidth","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/alwin/Desktop/bookself-rearranger/client/src/components/OCRTest.js"],"sourcesContent":["// client/src/components/OCRTest.js\r\n\r\nimport React, { useState } from 'react';\r\nimport Tesseract from 'tesseract.js';\r\n\r\nconst OCRTest = () => {\r\n  const [text, setText] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = () => {\r\n    if (image) {\r\n      setLoading(true); // Set loading state\r\n      Tesseract.recognize(\r\n        image,\r\n        'eng',\r\n        {\r\n          logger: info => console.log(info) // Log progress for debugging\r\n        }\r\n      ).then(({ data: { text } }) => {\r\n        setText(text);\r\n        setLoading(false); // Clear loading state\r\n      }).catch(err => {\r\n        console.error(err);\r\n        setLoading(false); // Clear loading state on error\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>OCR Test</h2>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      <button onClick={handleImageUpload}>Process Image</button>\r\n      <div>\r\n        {loading && <p>Processing...</p>} {/* Show loading state */}\r\n        {image && <img src={image} alt=\"Selected\" style={{ maxWidth: '100%', marginTop: '20px' }} />}\r\n        <pre>{text}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OCRTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}